# Environment Variables for Prompt Tuner
# 
# SETUP INSTRUCTIONS:
# 1. Copy this file: cp .env.example .env
# 2. Choose your environment (local development OR production)
# 3. Uncomment lines by removing the # symbol
# 4. Comment lines by adding # at the beginning
# 5. Update values to match your setup

#==============================================================================
# ENVIRONMENT TYPE (REQUIRED)
#==============================================================================
# Tells Flask whether this is development or production
# - development: Enables debug mode, detailed error pages
# - production: Optimized for performance, security-focused
FLASK_ENV=development
# FLASK_ENV=production

#==============================================================================
# LOCAL DEVELOPMENT SETTINGS
#==============================================================================
# Backend API URL (REQUIRED)
# This is where your AI workflow API is running
# Default assumes your backend API runs on localhost port 8000
# Change this if your API runs on a different host/port
API_BASE_URL=http://localhost:8000

# Flask Debug Mode (DEVELOPMENT ONLY)
# Enables automatic reloading when code changes
# Shows detailed error pages with stack traces
# NEVER enable in production (security risk)
FLASK_DEBUG=True

# Local Application Port (OPTIONAL)
# Port where this frontend application will run
# Default is 5000, uncomment to change
# PORT=5000

# CORS Origins (OPTIONAL)
# Allows frontend to communicate with APIs on different ports
# Needed if your backend API is on a different port/domain
# CORS_ORIGINS=http://localhost:3000,http://localhost:5000

#==============================================================================
# PRODUCTION SETTINGS
# Uncomment and modify these when deploying to production
#==============================================================================

# Backend API URL (PRODUCTION)
# Replace with your actual production API URL
# Examples for different deployment scenarios:
# API_BASE_URL=https://your-production-api.company.com
# API_BASE_URL=https://api.yourapp.com:8443
# API_BASE_URL=http://internal-api-server:8000

# Flask Settings (PRODUCTION)
# Disable debug mode for security and performance
# FLASK_DEBUG=False
# FLASK_ENV=production

# Security Settings (PRODUCTION RECOMMENDED)
# Secret key for session encryption - generate a random string
# Use: python -c "import secrets; print(secrets.token_hex(32))"
# SECRET_KEY=your-super-secret-key-here

# Secure cookie settings for HTTPS deployments
# Only enable if using HTTPS (recommended for production)
# SESSION_COOKIE_SECURE=True
# SESSION_COOKIE_HTTPONLY=True

# Production Port (OPTIONAL)
# Override default port if needed
# PORT=5000

# CORS Origins (PRODUCTION)
# List allowed domains that can access your API
# CORS_ORIGINS=https://yourapp.com,https://www.yourapp.com

# Health Check (OPTIONAL)
# Enable /health endpoint for monitoring
# HEALTH_CHECK_ENABLED=True

#==============================================================================
# DOCKER CONFIGURATION
# These settings work automatically in Docker containers
#==============================================================================
# Docker automatically reads .env files
# You can also override via command line:
# docker run -e API_BASE_URL=http://api-container:8000 prompt-tuner
# 
# For docker-compose, add to docker-compose.yml:
# environment:
#   - API_BASE_URL=http://api-service:8000

#==============================================================================
# COMMON DEPLOYMENT SCENARIOS
#==============================================================================

# SCENARIO 1: Local Development
# Use defaults above, just ensure your backend API runs on localhost:8000

# SCENARIO 2: Production with HTTPS
# Uncomment these lines:
# FLASK_ENV=production
# FLASK_DEBUG=False
# API_BASE_URL=https://your-api.com
# SECRET_KEY=generate-random-key
# SESSION_COOKIE_SECURE=True

# SCENARIO 3: Docker Deployment
# Set these in docker-compose.yml or via -e flags:
# API_BASE_URL=http://backend-service:8000
# FLASK_ENV=production
